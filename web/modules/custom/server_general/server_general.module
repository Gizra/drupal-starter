<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Language\LanguageInterface;
use Drupal\server_general\ArabicNumberConverter;

/**
 * Implements hook_theme_suggestions_alter().
 *
 * Adds fine-grained overrides for form templates.
 *
 * For instance for a form with an ID "server_general_foo_form", you can use
 * form--server-general-foo-form.html.twig
 *
 * That can be based on form.html.twig.
 */
function server_general_theme_suggestions_alter(array &$suggestions, array $variables) {
  if (!isset($variables['element'])) {
    return $suggestions;
  }

  if (!is_array($variables['element'])) {
    return $suggestions;
  }

  if (!isset($variables['element']['#type']) || $variables['element']['#type'] !== 'form') {
    return $suggestions;
  }

  $original_theme_hook = $variables['theme_hook_original'];
  $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);

  return $suggestions;
}

/**
 * Implements hook_intl_date_formatted_date_alter().
 */
function server_general_intl_date_formatted_date_alter(string &$formatted_date, array $context) {
  switch ($context['langcode']) {
    case 'ar':
      // Change Arabic numbers to Latin numbers.
      $formatted_date = ArabicNumberConverter::arToEn($formatted_date);
      break;

    case 'ru':
      // Uppercase the text parts of the date in Russian.
      $formatted_date = mb_convert_case($formatted_date, MB_CASE_TITLE, 'UTF-8');
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Move selected language to the top of the Language drop down list.
 */
function server_general_form_lang_dropdown_form_alter(array &$form, FormStateInterface $form_state) {
  $selected_language = $form['lang_dropdown_select']['#default_value'];
  $selected_language_name = $form['lang_dropdown_select']['#options'][$selected_language];

  // Remove item.
  unset($form['lang_dropdown_select']['#options'][$selected_language]);

  // And re-add on top of the list.
  $form['lang_dropdown_select']['#options'] = [$selected_language => $selected_language_name] + $form['lang_dropdown_select']['#options'];
}

/**
 * Implements hook_field_info_alter().
 *
 * Set default widgets.
 */
function server_general_field_info_alter(array &$info) {
  // Select2 for entity reference.
  if (isset($info['entity_reference'])) {
    $info['entity_reference']['default_widget'] = 'select2_entity_reference';
  }
}

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 *
 * Language selection should be without the not defined and not applicable
 * options.
 *
 * @see \Drupal\Core\Field\Plugin\Field\FieldWidget\LanguageSelectWidget::formElement()
 */
function server_general_field_widget_single_element_language_select_form_alter(array &$element, FormStateInterface $form_state, array $context) {
  $element['value']['#languages'] = LanguageInterface::STATE_CONFIGURABLE;
}
