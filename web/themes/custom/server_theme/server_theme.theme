<?php

/**
 * @file
 * Theme custom logic.
 */

/**
 * Implements hook_theme().
 */
function server_theme_theme() {
  $info = [];

  $info['server_theme_tag'] = [
    'variables' => [
      'url' => NULL,
      'title' => NULL,
    ],
  ];

  // Simple card.
  $info['server_theme_card'] = [
    'variables' => [
      'image' => NULL,
      'title' => NULL,
      'url' => NULL,
    ],
  ];

  // Multiple cards.
  $info['server_theme_cards'] = [
    'variables' => [
      // A list of cards.
      'items' => [],
    ],
  ];

  // "Call to action" paragraph type.
  $info['server_theme_cta'] = [
    'variables' => [
      'title' => NULL,
      'subtitle' => NULL,
      // The render array of `server_theme_button`.
      'button' => NULL,
    ],
  ];

  // "Text" paragraph type.
  $info['server_theme_text'] = [
    'variables' => [
      'title' => NULL,
      'body' => NULL,
    ],
  ];

  // Tags.
  $info['server_theme_tags'] = [
    'variables' => [
      // A list of links.
      'items' => [],
    ],
  ];

  $info['server_theme_footer'] = [
    'variables' => [],
  ];

  $info['server_theme_page_title'] = [
    'variables' => [
      'title' => NULL,
    ],
  ];

  $info['server_theme_container_wide'] = [
    'variables' => [
      'element' => NULL,
    ],
  ];

  $info['server_theme_hero_image'] = [
    'variables' => [
      'image' => NULL,
      'title' => NULL,
      'subtitle' => NULL,
      // The render array of `server_theme_button`.
      'button' => NULL,
    ],
  ];

  // Buttons.
  $info['server_theme_button'] = [
    'variables' => [
      'url' => NULL,
      // The button's text.
      'title'  => NULL,
      // Indicate if button should be primary or secondary.
      'is_primary' => NULL,
      // If TRUE, it will open the link in a new tab.
      'open_new_tab' => NULL,
      // Specify an icon. Any icon should be added as SVG in
      // `server-theme-button`.
      'icon' => NULL,
    ],
  ];

  $info['server_theme_related_content'] = [
    'variables' => [
      'title' => NULL,
      'items' => [],
      // The render array of `server_theme_button`.
      'button' => NULL,
    ],
  ];

  // Text that should have `prose` classes applied to it.
  $info['server_theme_prose_text'] = [
    'variables' => [
      'text' => NULL,
    ],
  ];

  return $info;
}

/**
 * Implements hook_preprocess_page().
 */
function server_theme_preprocess_page(array &$variables) {
  $variables['page']['footer'] = ['#theme' => 'server_theme_footer'];
}

/**
 * Implements hook_preprocess_page_title().
 *
 * On node view pages, we'll take care of showing the page title (i.e. the
 * <h1> element).
 */
function server_theme_preprocess_page_title(array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    $variables['title'] = '';
  }
}

/**
 * Implements hook_theme_suggestions_page_title_alter().
 *
 * Use our own page title theme.
 */
function server_theme_theme_suggestions_page_title_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'server_theme_page_title';
}
