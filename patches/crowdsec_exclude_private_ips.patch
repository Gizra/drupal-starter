diff --git a/src/EventSubscriber/CrowdSec.php b/src/EventSubscriber/CrowdSec.php
index ca9d873..d798a84 100644
--- a/src/EventSubscriber/CrowdSec.php
+++ b/src/EventSubscriber/CrowdSec.php
@@ -78,6 +78,13 @@ class CrowdSec extends HttpExceptionSubscriberBase {
     if (empty($ip)) {
       return;
     }
+    $ip = $event->getRequest()->getClientIp();
+    if (empty($ip)) {
+      return;
+    }
+    if (self::isPrivateIp($ip)) {
+      return;
+    }
     $this->buffer->addWhisperSignal($ip);
   }
 
@@ -90,7 +97,31 @@ class CrowdSec extends HttpExceptionSubscriberBase {
    *   The name of the event.
    */
   public function onBlockIp(UserFloodEvent $event, string $eventName): void {
-    $this->buffer->addSignal(Settings::SCENARIO_FLOOD, $event->getIp(), $event->getWindow());
+    $ip = $event->getIp();
+    if (self::isPrivateIp($ip)) {
+      return;
+    }
+    $this->buffer->addSignal(Settings::SCENARIO_FLOOD, $ip, $event->getWindow());
+  }
+  /**
+  * Determines if the IP is in the private range.
+  *
+  * @param string $ip
+  *   IPv4 or IPv6 address.
+  *
+  * @return bool
+  *   TRUE is private.
+  */
+  protected static function isPrivateIp(string $ip): bool {
+    if (!filter_var($ip, FILTER_VALIDATE_IP)) {
+      return false;
+    }
+
+    return preg_match('/^
+        (10\.)|                  # 10.0.0.0 - 10.255.255.255
+        (192\.168\.)|           # 192.168.0.0 - 192.168.255.255
+        (172\.(1[6-9]|2[0-9]|3[0-1])\.) # 172.16.0.0 - 172.31.255.255
+    /x', $ip);
   }
 
 }

